# PostgreSQL
DB_HOST=db
DB_PORT=5432

POSTGRES_DB=rosb
POSTGRES_USER=rosb_user
POSTGRES_PASSWORD=your_password
DB_NAME=rosb

# settings.py
ALLOWED_HOSTS=127.0.0.1,localhost,your_domain_1, your_domain_2
CORS_ORIGIN_WHITELIST=127.0.0.1,localhost,your_domain_1, your_domain_2
CSRF_TRUSTED_ORIGINS=your_domain_1
SECRET_KEY='django-insecure-=g=wiuyero3649rc71x39eqweub3958fmoqfgsvp7_wh*k==ep$78'

# DEBUG
DEBUG=True

# BD SETTINGS
DB_TYPE=sqlite


# POSTGRES_USER — имя пользователя БД (необязательная переменная,
#                 значение по умолчанию — postgres);
# POSTGRES_PASSWORD — пароль пользователя БД (обязательная переменная
#                     для создания БД в контейнере);
# POSTGRES_DB — название базы данных (необязательная переменная, по
#               умолчанию совпадает с POSTGRES_USER).
# Таким образом, можно передать в окружение только переменную POSTGRES_PASSWORD —
# и будет создана БД с названием postgres и пользователем postgres

# DB_HOST — адрес, по которому Django будет соединяться с базой данных.
#           При работе нескольких контейнеров в сети Docker network вместо
#           адреса указывают имя контейнера, где запущен сервер БД, — в нашем
#           случае это контейнер db.
# DB_PORT — порт, по которому Django будет обращаться к базе данных. 5432 —
#           это порт по умолчанию для PostgreSQL.name

# DEBUG - вкл/выкл режим отладки Django
# DB_TYPE - Выбор типа БД (postgres или sqlite)
